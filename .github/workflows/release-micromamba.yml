name: release-micromamba

on:
  workflow_dispatch: null
  push:
    branches:
    - master
  pull_request: null

jobs:
  release-micromamba-linux-osx:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - name: look for a tag
        run: |
          echo "found tag: '$(git tag --points-at HEAD)'"
          echo "GIT_TAG=$(git tag --points-at HEAD)" >> $GITHUB_ENV

      - name: free disk space
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.8
          channels: conda-forge,defaults
          channel-priority: strict

      - name: install deps
        shell: bash -l {0}
        run: |
          conda env create -q --file environment-unix.yml
          conda activate mamba-tests
          conda list

      - name: build micromamba
        shell: bash -l {0}
        run: |
          conda activate mamba-tests
          mkdir -p ~/.conda
          touch ~/.conda/environments.txt

          curl -Ls https://github.com/CLIUtils/CLI11/releases/download/v1.9.1/CLI11.hpp -o include/mamba/CLI.hpp

          mkdir build
          cd build
          cmake ${CMAKE_ARGS} .. \
            -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
            -DCMAKE_BUILD_TYPE="Release" \
            -DBUILD_EXE=ON \
            -DBUILD_BINDINGS=OFF \
            -DBUILD_STATIC=ON \
            -DBUILD_SHARED=OFF \
            -DSTATIC_DEPENDENCIES=ON \
            -DUSE_VENDORED_CLI11=ON

          make -j2
          ./micromamba --help

      - name: make release
        if: env.GIT_TAG != ''
        shell: bash -l {0}
        run: |
          conda activate mamba-tests
          cd build
          python ../.ci_support/upload_micromamba.py ${{ env.GIT_TAG }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-micromamba-win:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2016]
        python-version: [ '3.7' ]

    steps:
      - uses: actions/checkout@v2
      - name: look for a tag
        shell: bash
        run: |
          echo "found tag: '$(git tag --points-at HEAD)'"
          echo "GIT_TAG=$(git tag --points-at HEAD)" >> $GITHUB_ENV

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: conda-forge,defaults
          channel-priority: strict

      - name: create conda environment
        run: |
          conda env create -q --file environment-win.yml

      - name: build micromamba
        shell: cmd
        run: |
          call conda activate mamba-tests

          :: use the stuff from the feedstock
          :: ugly and needs fixing
          git clone https://github.com/conda-forge/micromamba-feedstock.git

          :: need this too
          curl -Ls https://github.com/CLIUtils/CLI11/releases/download/v1.9.1/CLI11.hpp -o include\mamba\CLI.hpp

          mkdir cmake_build
          cd cmake_build

          ROBOCOPY ..\micromamba-feedstock\recipe\libsolv %VCPKG_ROOT%\ports\libsolv
          ROBOCOPY ..\micromamba-feedstock\recipe\curl %VCPKG_ROOT%\ports\curl
          ROBOCOPY ..\micromamba-feedstock\recipe\reproc %VCPKG_ROOT%\ports\reproc

          SET VCPKG_BUILD_TYPE=release

          vcpkg install libsolv[conda] --triplet x64-windows-static
          vcpkg install libarchive --triplet x64-windows-static
          vcpkg install curl --triplet x64-windows-static
          vcpkg install yaml-cpp --triplet x64-windows-static
          vcpkg install reproc --triplet x64-windows-static

          set CMAKE_PREFIX_PATH=%VCPKG_ROOT%\installed\x64-windows-static\;%CMAKE_PREFIX_PATH%

          cmake .. ^
              -D CMAKE_INSTALL_PREFIX=%LIBRARY_PREFIX% ^
              -D CMAKE_PREFIX_PATH="%VCPKG_ROOT%\installed\x64-windows-static\;%CMAKE_PREFIX_PATH%" ^
              -D CMAKE_BUILD_TYPE="Release" ^
              -D BUILD_EXE=ON ^
              -D BUILD_STATIC=ON ^
              -D BUILD_SHARED=OFF ^
              -D STATIC_DEPENDENCIES=ON ^
              -D BUILD_BINDINGS=OFF ^
              -D USE_VENDORED_CLI11=ON ^
              -G "Ninja"

          ninja
          .\micromamba.exe --help

      - name: make release
        if: env.GIT_TAG != ''
        shell: cmd
        run: |
          call conda activate mamba-tests
          cd cmake_build
          python ..\.ci_support\upload_micromamba.py ${{ env.GIT_TAG }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  finally-release:
    runs-on: ubuntu-latest
    needs:
      - release-micromamba-linux-osx
      - release-micromamba-win
    steps:
      - uses: actions/checkout@v2
      - name: look for a tag
        run: |
          echo "found tag: '$(git tag --points-at HEAD)'"
          echo "GIT_TAG=$(git tag --points-at HEAD)" >> $GITHUB_ENV

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.8
          channels: conda-forge,defaults
          channel-priority: strict

      - name: install deps
        shell: bash -l {0}
        run: |
          conda env create -q --file environment-unix.yml
          conda activate mamba-tests
          conda list

      - name: finally release
        if: env.GIT_TAG != ''
        shell: bash -l {0}
        run: |
          conda activate mamba-tests
          python .ci_support/release_micromamba.py ${{ env.GIT_TAG }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
