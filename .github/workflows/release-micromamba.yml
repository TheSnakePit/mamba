name: release-micromamba

on:
  push:
    # branches:
    # - master

jobs:
  release-micromamba-linux-osx:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - name: look for a tag
        run: |
          echo "found tag: '$(git tag --points-at HEAD)'"
          # echo "GIT_TAG=$(git tag --points-at HEAD)" >> $GITHUB_ENV
          # FIXME: remove this after testing
          echo "GIT_TAG=blah" >> $GITHUB_ENV

      - name: free disk space
        if: matrix.os == 'ubuntu-latest' && env.GIT_TAG != ''
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h

      - uses: conda-incubator/setup-miniconda@v2
        if: env.GIT_TAG != ''
        with:
          auto-update-conda: true
          python-version: 3.8
          channels: conda-forge,defaults
          channel_priority: strict

      - name: install deps
        if: env.GIT_TAG != ''
        shell: bash -l {0}
        run: |
          conda env create -q -y --file environment-unix.yml

      - name: build tests
        if: env.GIT_TAG != ''
        shell: bash -l {0}
        run: |
          conda activate mamba-tests
          mkdir -p ~/.conda
          touch ~/.conda/environments.txt
          mkdir build
          cd build
          cmake .. -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DENABLE_TESTS=ON -DBUILD_EXE=ON -DBUILD_BINDINGS=OFF
          make test -j2

  release-micromamba-win:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2016]
        python-version: [ '3.7' ]

    steps:
      - uses: actions/checkout@v2
      - name: look for a tag
        shell: bash
        run: |
          echo "found tag: '$(git tag --points-at HEAD)'"
          # echo "GIT_TAG=$(git tag --points-at HEAD)" >> $GITHUB_ENV
          # FIXME: remove this after testing
          echo "GIT_TAG=blah" >> $GITHUB_ENV

      - uses: conda-incubator/setup-miniconda@v2
        if: env.GIT_TAG != ''
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

      - name: Conda info
        if: env.GIT_TAG != ''
        run: conda info

      - name: Create the conda environment
        if: env.GIT_TAG != ''
        run: |
          conda config --add channels conda-forge
          conda config --set channel_priority strict
          conda env create -q -y --file environment-win.yml

      - name: Install dependencies
        if: env.GIT_TAG != ''
        run: |
          conda activate mamba-tests
          python --version
          python -m pip install ".[test]"

      - name: Run C++ tests Windows
        if: env.GIT_TAG != ''
        shell: cmd
        run: |
          call conda activate mamba-tests
          mkdir cmake_build
          cd cmake_build
          cmake .. -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX%\Library -DENABLE_TESTS=ON -G "Ninja"
          ninja test

      - name: Build micromamba on Windows
        if: env.GIT_TAG != ''
        shell: cmd
        run: |
          call conda activate mamba-tests
          cd cmake_build
          cmake .. -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX%\Library -DBUILD_EXE=ON -G "Ninja"
          ninja
          .\micromamba.exe --help
